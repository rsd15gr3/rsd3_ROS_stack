<launch>
    <!-- Frobit parameters -->
    <param name="diff_steer_wheel_distance" value="0.375"/>
    <param name="ticks_per_meter_left" value="700" />
    <param name="ticks_per_meter_right" value="700" />

    <group ns="fmSafety">
        <node pkg="basic_incident_handler" name="incident_handler" type="basic_incident_handler_node.py" output="screen">
            <param name="deadman_enable" value="True" />
            <param name="deadman_timeout" value="0.100" />
            <param name="deadman_sub" value="/fmSafe/deadman" />
            <param name="critical_fault_enable" value="False" />
            <param name="critical_fault_timeout" value="0.100" />
            <param name="critical_fault_sub" value="/fmSafe/critical_fault" />
            <param name="obstacle_enable" value="False" />
            <param name="obstacle_timeout" value="0.100" />
            <param name="obstacle_sub" value="/fmSafe/obstacle" />
            <param name="actuation_enable_pub" value="/fmSafe/actuation_enable" />
        </node>
    </group>

    <group ns="fmLib">
        <!-- Serial communication with the IMU -->
        <node pkg="serial_string" name="imu_serial_string_node" type="serial_string_node" output="screen">
            <param name="publisher_topic" value="/fmData/imu_rx" />
            <param name="subscriber_topic" value="/fmData/imu_tx" />
            <param name="device" value="/dev/imu" />
            <param name="baudrate" value="115200" />
            <param name="termination_character" value="10"/>
        </node>

        <!-- Frobit serial device and protocol interface -->
        <node pkg="serial_nmea" name="frobit_nmea" type="serial_nmea_node" respawn="true" output="screen">
            <param name="nmea_from_device_pub" value="/fmSignal/nmea_from_frobit"/>
            <param name="nmea_to_device_sub" value="/fmSignal/nmea_to_frobit"/>
            <param name="serial_device" value="/dev/frobit"/>
            <param name="serial_baudrate" value="57600"/>
            <param name="use_nmea_checksum" value="true"/>
        </node>

        <!-- Serial comm with Arduino -->
        <!-- <node pkg="rosserial_python" name="rosserial_python" type="serial_node.py" output="screen" args="/dev/ttyACM0" /> --> <!-- TODO udev symlink -->
    </group>

    <!-- Sensor drivers -->
    <group ns="fmSensors">
        <!-- Vectornav VN-100 IMU -->
        <node pkg="vectornav_vn100" name="imu_node" type="vectornav_vn100_node" output="screen">
            <param name="vectornav_vn100_sub" value="/fmData/imu_rx" />
            <param name="imu_pub" value="/fmInformation/imu" />
            <param name="frame_id" value="imu_link" />
            <param name="use_enu" value="true" />
            <param name="covariance_x" value="0.01" />
            <param name="covariance_y" value="0.01" />
            <param name="covariance_z" value="0.01" />
        </node>

        <!-- SICK laser scanner -->
        <node name="sick_tim310s01" pkg="sick_tim" type="sick_tim310s01" respawn="false" output="screen">
            <param name="min_ang" type="double" value="-1.8326" />
            <param name="max_ang" type="double" value="1.8326" />
            <param name="intensity" type="bool" value="True" />
            <param name="skip" type="int" value="0" />
            <param name="frame_id" type="str" value="laser_link" />
            <param name="time_offset" type="double" value="-0.001" />
            <param name="publish_datagram" type="bool" value="False" />
        </node>
    </group>

    <!-- Map publisher -->
    <node name="static_map_publisher" pkg="map_server" type="map_server" args="$(find frobit_lego_transporter)/map/robolab_hector.yaml" />

    <!-- AMCL node -->
    <node pkg="amcl" type="amcl" name="amcl" output="screen">
        <remap from="scan" to="/fmSensors/scan" />

        <!-- Particle filter -->
        <param name="min_particles" value="500" />
        <param name="max_particles" value="5000" />
        <param name="kld_err" value="0.01" />
        <param name="kld_z" value="0.99" />
        <param name="update_min_d" value="0.1" />
        <param name="update_min_a" value="0.5236" />
        <param name="resample_interval" value="2" />
        <param name="transform_tolerance" value="0.2" />

        <param name="recovery_alpha_slow" value="0.0" />
        <param name="recovery_alpha_fast" value="0.0" />

        <!-- Inital pose -->
        <param name="initial_pose_x" value="0.0" />
        <param name="initial_pose_y" value="0.0" />
        <param name="initial_pose_a" value="0.0" />
        <param name="initial_cov_xx" value="0.25" />
        <param name="initial_cov_yy" value="0.25" />
        <param name="initial_cov_aa" value="0.0685" />

        <param name="gui_publish_rate" value="10.0" />
        <param name="save_pose_rate" value="0.5" />

        <param name="use_map_topic" value="true" />
        <param name="first_map_only" value="true" />

        <!-- Laser model parameters -->
        <param name="laser_min_range" value="0.05" /> <!-- -1 to use lasers reported range -->
        <param name="laser_max_range" value="4.0" />
        <param name="laser_max_beams" value="270" />
        <param name="laser_z_hit" value="0.95" />
        <param name="laser_z_short" value="0.1" />
        <param name="laser_z_max" value="0.05" />
        <param name="laser_z_rand" value="0.05" />
        <param name="laser_sigma_hit" value="0.2" />
        <param name="laser_lambda_short" value="0.1" />
        <param name="laser_likelihood_max_dist" value="2.0" />
        <param name="laser_model_type" value="likelihood_field"/>   <!-- <param name="laser_model_type" value="beam"/> -->

        <!-- Odometery model parameters -->
        <param name="odom_model_type" value="diff" />
        <param name="odom_alpha1" value="0.1" />
        <param name="odom_alpha2" value="0.1" />
        <param name="odom_alpha3" value="0.1" />
        <param name="odom_alpha4" value="0.1" />
        <param name="odom_alpha5" value="0.0" />

        <param name="odom_frame_id" value="odom" />
        <param name="base_frame_id" value="base_link" />
        <param name="global_frame_id" value="map" />
        <param name="tf_broadcast" value="false" />
    </node>

    <!-- Sensor data processing -->
    <group ns="fmProcessors">
        <!-- Calculate odometry based on wheel encoders and IMU yaw axis orientation -->
        <node pkg="differential_odometry" name="differential_odometry" type="differential_odometry_node" output="screen">
            <param name="enc_left_sub" value="/fmInformation/encoder_left" />
            <param name="enc_right_sub" value="/fmInformation/encoder_right" />
            <param name="imu_sub" value="/fmInformation/imu" />
            <param name="odom_reset_sub" value="/fmInformation/odom_reset" />
            <param name="odom_pub" value="odometry/wheels" />
            <param name="encoder_output" value="absolute" />
            <param name="max_ticks_per_update" value="200" />
            <param name="yaw_angle_source" value="odometry" /> <!-- Do not use IMU as yaw source; EKF fuses the measurements -->
            <param name="publish_transform" value="false" />
            <param name="odom_estimate_frame" value="odom" />
            <param name="vehicle_frame" value="base_link" />
            <rosparam param="pose_covariance_diagonal">[0.3, 0.3, 0.3, 0.5, 0.5, 0.5]</rosparam>
            <rosparam param="twist_covariance_diagonal">[0.1, 0.1, 0.1, 0.2, 0.2, 0.2]</rosparam>
        </node>

        <!-- MarkerLocator "GPS" -->
        <node pkg="markerlocator_odometry" name="markerlocator_odometry" type="markerlocator_odometry_node.py" output="screen">
            <param name="host" value="10.115.253.233" />
            <param name="port" value="21212" />
            <param name="frame_id" value="markerlocator" />
            <param name="time_offset" type="double" value="0.0" />
            <rosparam param="pose_covariance_diagonal">[0.05, 0.05, 0.05, 0.1, 0.1, 0.1]</rosparam>
        </node>

        <!-- EKF for fusing continuous position data from wheel odometry and IMU -->
        <node pkg="robot_localization" type="ekf_localization_node" name="ekf_loc_local" output="screen" clear_params="true">
            <param name="frequency" value="30"/>
            <param name="sensor_timeout" value="0.1"/>
            <param name="two_d_mode" value="true"/>

            <param name="map_frame" value="map"/>
            <param name="odom_frame" value="odom"/>
            <param name="base_link_frame" value="base_link"/>
            <param name="world_frame" value="odom"/>

            <param name="transform_time_offset" value="0.0"/>

            <param name="odom0" value="odometry/wheels"/>
            <param name="imu0" value="/fmInformation/imu"/>

            <!--
            x,     y,      z,
            roll,  pitch,  yaw,
            vx,    vy,     vz,
            vroll, vpitch, vyaw,
            ax,    ay,     az
             -->

            <!-- Wheel odometry -->
            <rosparam param="odom0_config">[false, false, false,
                                            false, false, false,
                                            true, true, false,
                                            false, false, true,
                                            false, false, false]</rosparam>

            <!-- IMU -->
            <rosparam param="imu0_config">[false, false, false,
                                           false, false, true,
                                           false, false, false,
                                           false, false, true,
                                           true,  false, false]</rosparam>

            <param name="odom0_differential" value="false"/>
            <param name="imu0_differential" value="false"/>

            <param name="odom0_relative" value="true"/>
            <param name="imu0_relative" value="true"/>

            <param name="imu0_remove_gravitational_acceleration" value="true"/>

            <remap from="odometry/filtered" to="odometry/filtered/local"/>
            <remap from="set_pose" to="/initialpose"/>
        </node>

        <!-- EKF for also fusing global absolute position data which is subject to discrete jumps -->
        <node pkg="robot_localization" type="ekf_localization_node" name="ekf_loc_global" output="screen" clear_params="true">
            <param name="frequency" value="30"/>
            <param name="sensor_timeout" value="0.1"/>
            <param name="two_d_mode" value="true"/>

            <param name="map_frame" value="map"/>
            <param name="odom_frame" value="odom"/>
            <param name="base_link_frame" value="base_link"/>
            <param name="world_frame" value="map"/>

            <param name="transform_time_offset" value="0.0"/>

            <param name="odom0" value="odometry/wheels"/>
            <param name="odom1" value="odometry/markerlocator"/>
            <param name="imu0" value="/fmInformation/imu"/>
            <param name="pose0" value="/amcl_pose"/>

            <!-- Wheel odometry -->
            <rosparam param="odom0_config">[false, false, false,
                                            false, false, false,
                                            true, true, false,
                                            false, false, true,
                                            false, false, false]</rosparam>

            <!-- MarkerLocator GPS -->
            <rosparam param="odom1_config">[true, true, false,
                                            false, false, true,
                                            false, false, false,
                                            false, false, false,
                                            false, false, false]</rosparam>

            <!-- IMU -->
            <rosparam param="imu0_config">[false, false, false,
                                           false, false, false,
                                           false, false, false,
                                           false, false, true,
                                           true,  false, false]</rosparam>

            <!-- AMCL -->
            <rosparam param="pose0_config">[true, true, false,
                                            false, false, true,
                                            false, false, false,
                                            false, false, false,
                                            false, false, false]</rosparam>

            <param name="odom0_differential" value="false"/>
            <param name="odom1_differential" value="false"/>
            <param name="imu0_differential" value="false"/>
            <param name="pose0_differential" value="false"/>

            <param name="odom0_relative" value="true"/>
            <param name="odom1_relative" value="false"/>
            <param name="imu0_relative" value="true"/>
            <param name="pose0_relative" value="false"/>

            <param name="imu0_remove_gravitational_acceleration" value="true"/>

            <!-- Reject measurements which are too far from current vehicle state -->
            <param name="odom1_pose_rejection_threshold" value="2"/> <!-- MarkerLocator -->

            <remap from="odometry/filtered" to="odometry/filtered/global"/>
            <remap from="set_pose" to="/initialpose"/>
        </node>
    </group>

    <!-- Transform between map and markerlocator frames -->
    <node pkg="tf" type="static_transform_publisher" name="markerlocator_map_tf" args="-0.475 -1.489 0 0 0 0.710 0.704 map markerlocator 100" />

    <!-- Frobit state publisher -->
    <param name="robot_description" textfile="$(find frobit_description)/urdf/frobit.urdf" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" output="screen" />
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen">
        <param name="publish_frequency" value="100"/>
    </node>

    <group ns="fmControllers">
        <!-- Frobit interface -->
        <node pkg="sdu_frobit_v2" name="frobit" type="frobit_interface_node.py" output="screen">
            <param name="actuation_enable_sub" value="/fmSafe/actuation_enable" />
            <param name="cmd_vel_sub" value="/fmCommand/safe_vel" />
            <param name="enc_left_pub" value="/fmInformation/encoder_left" />
            <param name="enc_right_pub" value="/fmInformation/encoder_right" />
            <param name="wheel_status_left_pub" value="/fmInformation/wheel_status_left" />
            <param name="wheel_status_right_pub" value="/fmInformation/wheel_status_right" />
            <param name="wheel_feedback_left_pub" value="/fmInformation/wheel_feedback_left" />
            <param name="wheel_feedback_right_pub" value="/fmInformation/wheel_feedback_right" />
            <param name="wheel_pid_left_pub" value="/fmInformation/wheel_pid_left" />
            <param name="wheel_pid_right_pub" value="/fmInformation/wheel_pid_right" />
            <param name="nmea_from_frobit_sub" value="/fmSignal/nmea_from_frobit" />
            <param name="nmea_to_frobit_pub" value="/fmSignal/nmea_to_frobit" />
            <param name="publish_wheel_status_rate" value="10" />
            <param name="publish_wheel_feedback_rate" value="10" />
            <param name="publish_wheel_pid_rate" value="10" />
            <param name="castor_front" value="true" />
            <param name="max_linear_acceleration" value="16.2" />
            <param name="max_angular_acceleration" value="16.0" />
            <param name="wheel_drive_feed_forward" value="85" />
            <param name="wheel_drive_kp" value="5" />
            <param name="wheel_drive_ki" value="10" />
            <param name="wheel_drive_kd" value="5" />
            <param name="wheel_drive_max_integral_output" value="300" />
            <param name="wheel_turn_feed_forward" value="110" />
            <param name="wheel_turn_kp" value="10" />
            <param name="wheel_turn_ki" value="20" />
            <param name="wheel_turn_kd" value="3" />
            <param name="wheel_turn_max_integral_output" value="300" />
            <param name="supply_voltage_scale_factor" value="0.03747" />
            <param name="min_supply_voltage" value="12.1" />
            <param name="show_voltage_interval" value="300" />
        </node>
    </group>

    <!-- Onboard webcam -->
    <node name="usb_cam" pkg="usb_cam" type="usb_cam_node" output="screen" >
        <param name="video_device" value="/dev/video0" />
        <param name="image_width" value="1280" />
        <param name="image_height" value="720" />
        <param name="pixel_format" value="mjpeg" />
        <param name="camera_frame_id" value="/camera_link" />
        <param name="framerate" value="30" />
        <param name="contrast" value="32" />
        <param name="brightness" value="32" />
        <param name="saturation" value="32" />
        <param name="sharpness" value="72" />
        <param name="autofocus" value="false" />
        <param name="focus" value="-1" />
        <param name="camera_info_url" value="package://frobit_lego_transporter/config/head_camera.yaml" />
        <param name="camera_name" value="head_camera" />
        <param name="io_method" value="mmap"/>
    </node>
</launch>
